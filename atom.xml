<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://laichao2018.github.io</id>
    <title>赖超的个人网站</title>
    <updated>2020-11-05T14:19:46.535Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://laichao2018.github.io"/>
    <link rel="self" href="https://laichao2018.github.io/atom.xml"/>
    <subtitle>&lt;b&gt;记录学习点滴，欢迎浏览</subtitle>
    <logo>https://laichao2018.github.io/images/avatar.png</logo>
    <icon>https://laichao2018.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 赖超的个人网站</rights>
    <entry>
        <title type="html"><![CDATA[[开发工具] Git Submodule的使用]]></title>
        <id>https://laichao2018.github.io/post/kai-fa-gong-ju-git-submodule-de-shi-yong/</id>
        <link href="https://laichao2018.github.io/post/kai-fa-gong-ju-git-submodule-de-shi-yong/">
        </link>
        <updated>2020-11-05T13:19:17.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-介绍">1. 介绍</h2>
<ul>
<li>submodule子模块，简单来讲就是Git仓库中的子仓库。</li>
<li>如果有一个模块是通用的，多个项目依赖这个模块；或者Github上要使用一个开源算法模块。但模块更新后，要怎么在自己的项目中保持同步更新甚至是提交呢？答案是使用Git Submodule。</li>
</ul>
<h2 id="2-用法">2. 用法</h2>
<h3 id="21-新增submodule"><strong>2.1. 新增submodule</strong></h3>
<pre><code class="language-cpp">git submodule add $giturl $foldername
</code></pre>
<p>其中<font color=red>＄giturl</font>表示git仓库地址，<font color=red>＄foldername</font>表示submodule的目录名，例如：</p>
<pre><code>git submodule add git://github.com/xx/A.git A
</code></pre>
<blockquote>
<p>注：下面示例全部以 A 当做submodule所在目录</p>
</blockquote>
<p>完成后，将文件变化提交即可</p>
<h3 id="22-clone有submodule的git仓库"><strong>2.2. clone有submodule的git仓库</strong></h3>
<pre><code>git clone $giturl
git submodule init
git submodule update
</code></pre>
<h3 id="23-submodule-a作者有更新如何同步到我的项目"><strong>2.3. submodule A作者有更新，如何同步到我的项目？</strong></h3>
<p><strong>2.3.1 更新submodule A</strong></p>
<pre><code class="language-cpp"> cd A
 git pull
</code></pre>
<p><strong>2.3.2 回到主git仓库，查看状态，并提交</strong></p>
<pre><code class="language-cpp"> cd ..
 git status

 //输出结果有这样的内容，意思是submodule A有修改。add并提交即可
 modified:   A (new commits)

 git add .
 git commit -m 'update submodule'
 git push
</code></pre>
<p><strong>2.3.3 你的同事或者协作的开发者，如何更新？</strong></p>
<pre><code class="language-cpp"> git pull
 git submodule update
</code></pre>
<p>这些操作和status的内容一开始可能很难理解，这里讲一下关于submodule的设计理念：</p>
<ul>
<li>主git仓库中存在<font color=red>.gitmodules</font>文件，它记录了submodule的基本信息。例如remote地址。</li>
<li>同时在某处记录了主git仓库所用的submodule的commit号。</li>
<li>主git仓库并不同步submodule中的所有代码，而是同步其remote地址和commit号，每个clone都是根据这两个信息自行到remote地址获取到该commit版本的内容。</li>
</ul>
<p>所以，如果你要更新submodule必须做上面的操作步骤。而你操作完成后，你的git仓库中submodule的commit号得到更新。这样，与你协作的开发者，就可以直接<font color=red>git pull</font>得到最新的submodule commit号，<font color=red>git submodule update</font>获取submodule该commit的代码。</p>
<h3 id="24-主git仓库的开发者同时也是submodule-a的作者如何在主git仓库修改a并同步"><strong>2.4. 主git仓库的开发者，同时也是submodule A的作者，如何在主git仓库修改A并同步？</strong></h3>
<p>如果理解了上面说的设计理念，那么这个操作非常简单。</p>
<ol>
<li>修改A目录中的内容</li>
<li>提交并同步A</li>
</ol>
<pre><code class="language-cpp"> cd A
 git add .
 git commit
 git push
</code></pre>
<ol start="3">
<li>此时，就处于3.2的状态，按照3.2操作即可。</li>
</ol>
<h3 id="25-几个submodule都想更到最新"><strong>2.5. 几个submodule都想更到最新</strong></h3>
<p>简便操作:</p>
<pre><code class="language-cpp">git submodule foreach git pull
</code></pre>
<p>这样所有submodule都更到最新了，add commit即可。</p>
<h2 id="3原文链接">3.原文链接</h2>
<ul>
<li><a href="https://www.jianshu.com/p/384c73fe173f">https://www.jianshu.com/p/384c73fe173f</a></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于博主]]></title>
        <id>https://laichao2018.github.io/post/guan-yu-bo-zhu/</id>
        <link href="https://laichao2018.github.io/post/guan-yu-bo-zhu/">
        </link>
        <updated>2020-08-24T07:37:49.000Z</updated>
        <content type="html"><![CDATA[<p><strong>👏👏👏欢迎来到我的个人主页</strong></p>
<p>✍️✍️✍️ <strong>这里是我的平常学习记录和学习感悟</strong> ~~~ <strong>博客复兴🤙🤙🤙</strong></p>
<h4 id="指南针️">指南针🎶🐱‍🐉🏄‍♂️</h4>
<p><a href="https://github.com/LAICHAO2018">GitHub主页🎓</a></p>
<h4 id="个人技能">个人技能😘👨‍🎓🥝</h4>
<blockquote>
<ul>
<li>🎓计算机相关专业(地理信息工程) 相关硕士/学士，4年计算机编程学习经验，3年相关开发经验，个人在校参与项目工作编写代码累积量约1万行</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>💼精通C/C++，基础扎实，熟悉数据库编程，有底层开发开发经验，熟练掌握面向对象思想、STL等C++特性</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>👝技术全面，对QT、C# .Net、MFC 、Java、Python等均有一定程度的了解与接触，编写过相关代码</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>👜熟悉CMake/Makefile等常用C++构建工具，能够编写项目CMake文档</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>☂️熟悉软件说明文档与开发日志的写作，有规范命名，写注释，缩进统一的良好编程习惯</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>🌂熟练掌握MySQL数据库的部署，实施，排查，故障分析处理，有相关项目经验</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>👖熟悉影像三维重建的构建过程，对主流SfM/MVS等PipeLine有较深入的理解，有较深刻的理论基础与实际实现能力，阅读过底层开源代码</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>👕自学HTML/CSS/JavaScript，对jQuery、Vue等前端框架有一定的了解</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>👒Linux爱好者，使用Ubuntu 18.04作为PC系统，熟练管理各种增强插件，Vimer，熟练运用常用命令并共享了相关配置文件</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>🕴有个人GitHub项目，和基于GitHub的个人网站<a href="https://github.com/LAICHAO2018">GitHub主页🎓</a>，LeetCode刷题通过量约500题</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>🤴有使用TensorFlow与Caffe(C++)的深度学习科研经历，旨在通过学习实现点云与影像的特征匹配从而达到多源数据融合</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>🙅‍♂具备良好的沟通能力、很强的团队意识与责任心，尽职尽责，空闲时间常常学习充电</li>
</ul>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://laichao2018.github.io/post/hello-gridea/</id>
        <link href="https://laichao2018.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>